---
layout: post
title:  "Svn服务器搭建"
date:   2017-11-17 23:38:00 +0800
categories: jekyll update
---

### Svn服务器搭建

#### linuxSvn服务搭建
	
	yum update
	yum install subversion

#### 检查是否安装成功
		
	/usr/bin/svnversion --version
	
自定义一个版本库目录:
本文例如：【/var/www/svnwww】
#### 创建一个版本库（create）
		
	cd /var/www/svnwww
	svnadmin create /var/www/svnwww/demo --fs-type fsfs doc
	或
	svnadmin create /var/www/svnwww/demo --fs-type bdb doc

两种不同的保存格式 fsfs 和 dbd
#### 删除一个版本库可以用linux rm -f 加版本库文件夹名
#### 介绍版本库文件
	
	conf db format hooks locks README.test
	conf  //配置文件夹
	hooks //钩子文件夹
	locks //锁文件夹

#### 修改配置文件
  
  修改conf文件夹内的配置
  authz 文件是权限控制文件
  passwd 是帐号密码文件
  svnserve.conf SVN服务配置文件
  
#### 设置帐号密码

	vim passwd
	//在[users]块中添加用户和密码，格式：帐号=密码
	admin=admin
	demo=demo

#### 设置权限

	vim authz
	//在末尾添加如下代码
	[/]
	admin=rw //拥有读写
	demo=r  //仅拥有读
	//意思是版本库的根目录admin对其有读写权限，demo只有读权限。更多权限类型请自行查询

#### 修改svnserve.conf文件

	vim svnserve.conf
	//打开下面几个注释：（否则上面的配置操作无效）
	anon-access = read #匿名用户可读
	auth-access = write #授权用户可写
	password-db = passwd #使用哪个文件作为账号文件
	authz-db = authz #使用哪个文件作为权限文件

#### 启动svn版本库【svnserve 没有r】

	两种模式 一种是每个版本库设置一个端口
	一种是统一一个端口访问所有版本库
	//第二种模式代码
	svnserve -d -r /var/www/svnwww
	ps-aux检查是否开启成功

#### 设置hooks让svn提交的同时修改到web项目目录里

项目目录为/var/www 
自定义设定svn同步到www目录的文件地址为 /var/www/svn/
	
	cp /hooks/post-commit.templ post-commit
	vim post-commit
	//写入
	#!/usr/bin
	svn update /var/www/svn --usrname admin --password admin
	//保存退出 
	wq
	//给予执行权限
	chmod +x post-commit
不要着急到客户端去执行提交 
设置完毕后 需要确定 项目目录中是否有这个/var/www/svn 
并在/var/www/svn 下执行 svn checkout

##### 注解::hooks本文设置原理 其实是将项目目录中某个目录设置成svn的客户端	,每次有提交操作的时候更新这个客户端

##### 现在在客户端 [另一台电脑]

创建一个文件夹
		
	mkdir svnclient
	cd svnclient
	svn checkout svn:\/\/svn服务器的ip/项目名称

创建一个文件夹作为主干
		
	mkdir trunk 
	svn add *
	svn commit svn:\/\/svn服务器的ip/项目名称 -m '创建主干'

copy一个分支branch 一个tags
branch用来做开发 tags用来存放阶段性版本
	
	svn copy svn:\/\/svn服务器的ip/项目名称/trunk svn:\/\/svn服务器的ip/项目名称/branch
	svn copy svn:\/\/svn服务器的ip/项目名称/trunk svn:\/\/svn服务器的ip/项目名称/tags

#### 配置Apache  Nginx 到对应的 branch trunk 即可访问 实时版本

#### 其他问题
	
	//svn merge 合并分支
	svn merge svn:\/\/svn服务器的ip/项目名称/主干 svn:\/\/svn服务器的ip/项目名称/分支
	svn merge svn:\/\/svn服务器的ip/项目名称/分支 svn:\/\/svn服务器的ip/项目名称/主干
	
	//解决冲突后
	svn resolve –accept working 文件名
	svn commit 对应地址 -m ”


	